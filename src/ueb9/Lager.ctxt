#BlueJ class context
comment0.target=Lager
comment0.text=\r\n\ Ein\ Lager\ in\ dem\ die\ Artikel\ gelagert,\ geloescht\ und\ bearbeitet\ \ werden\r\n\ \r\n\ @author\ Pascal\ Fickert\ &\ LUis\ Willnat\r\n\ @version\ 1.0\r\n
comment1.params=lagerName\ maxAnzahlArtikel
comment1.target=Lager(java.lang.String,\ int)
comment1.text=\r\n\ Standardkonstruktor\ um\ ein\ Lager\ zu\ erstellen\r\n\ @param\ lagerName\ \ \ \ der\ Name\ des\ Lagers\r\n\ @param\ maxAnzahlArtikel\ \ \ \ Anzahl\ der\ Artikel\ die\ das\ Lager\ enthalten\ kann,\ muss\ groesser\ als\ null\ sein\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ Eine\ toString\ Methode\ um\ das\ Lager\ schriflich\ wiederzugeben\r\n\ @return\ Inhalt\ des\ Lagers\r\n
comment11.params=beliebigArtikel
comment11.target=void\ artikelAnlegen(Artikel)
comment11.text=\r\n\ Methode\ um\ einen\ Artikel\ anzulegen\r\n\ @param\ beliebigArtikel\ \ \ \ Artikelobjekt\ wurde\ bei\ ArtikelDialog\ erzeugt\r\n
comment12.params=
comment12.target=void\ ausgebenBestandsListe()
comment12.text=\r\n\ Lager\ als\ ganzes\ ausgeben,\ mit\ Bestand\ und\ Wert\ vom\ jeweiligen\ Artikel\r\n\ Gesamtwert\ des\ Lagers\ ausgeben\r\n
comment13.params=a
comment13.target=void\ getAll(Artikel)
comment14.params=stock\ kriterium
comment14.target=Artikel[]\ getSorted(Artikel[],\ java.lang.String)
comment15.params=tester
comment15.target=void\ filter(boolean)
comment16.params=function
comment16.target=void\ applyToArticles(java.util.function.UnaryOperator)
comment17.params=test\ function
comment17.target=void\ applyToSomeArticles(boolean,\ java.util.function.UnaryOperator)
comment18.params=tester\ kriter
comment18.target=Artikel[]\ getArticles(boolean,\ java.lang.String)
comment19.params=bedingung\ meldung
comment19.target=void\ ueberpruefen(boolean,\ java.lang.String)
comment19.text=\r\n\ Eine\ Methode\ zur\ Ueberpruefung\ einer\ gegebenen\ bedingung\ und\ falls\ diese\ nichr\ erfuelllt\ ist,\ werfen\ einer\ fehlermeldung\ \r\n@param\ bedinngung\ \ Eine\ Bedingung\ wird\ auf\ Richtigkeit\ ueberprueft\r\n@param\ meldung\ \ Eine\ Fehlermeldung\ falls\ die\ bedingung\ nicht\ erfuellt\ ist\r\n
comment2.params=
comment2.target=Lager()
comment2.text=\r\n\ Konstruktor\ mir\ vorgegebener\ Maximalgroesse\ und\ Namen\r\n
comment3.params=artikelNummer
comment3.target=void\ artikelEntfernen(int)
comment3.text=\r\n\ Methode\ um\ einen\ Artikel\ aus\ dem\ lager\ zu\ loeschen\r\n\ @param\ artikelNummer\ \ es\ wird\ ueberpeuft\ ob\ der\ Artikel\ vorhanden\ ist\r\n
comment4.params=artikelNummer\ menge
comment4.target=void\ lagerZugang(int,\ int)
comment4.text=\r\n\ Den\ Bestand\ eines\ Artikels\ im\ Lager\ erhohen\r\n\ @param\ artikelNummer\ \ ueberpruefen\ ob\ der\ Artikel\ vorhanden\ ist\r\n\ @param\ menge\ \ die\ Anzahl\ an\ Artikeln\ die\ dem\ Lager\ hinzugefuegt\ werden\r\n
comment5.params=artikelNummer\ menge
comment5.target=void\ lagerAbgang(int,\ int)
comment5.text=\r\n\ Den\ Bestand\ eines\ Artikels\ im\ Lager\ senken\r\n\ @param\ artikelNummer\ \ ueberpruefen\ ob\ der\ Artikel\ vorhanden\ ist\r\n\ @param\ menge\ \ die\ Menge\ die\ abgezogen\ wird\r\n
comment6.params=prozente
comment6.target=void\ preisVeraenderungPlus(double)
comment6.text=\r\n\ @param\ prozente\ \ \ Alle\ preise\ um\ einen\ Prozentsatz\ erhoehen\r\n
comment7.params=element\ zeichen\ aenderung
comment7.target=void\ applyToArticles(java.lang.String,\ java.lang.String,\ double)
comment8.params=prozente
comment8.target=void\ preisVeraenderungMinus(double)
comment8.text=\r\n\ @param\ prozente\ \ Alle\ preise\ um\ einen\ Prozentsatz\ senken\r\n
comment9.params=artikelNummer
comment9.target=int\ findeArtikel(int)
comment9.text=\r\n\ Diese\ Funktion\ dient\ dazu\ festzustelllen,\ ob\ eine\ Artikelnummer\ vorhanden\ ist\r\n\ @param\ artikelNummer\r\n\ @return\ index\ des\ Artikels\ oder\ -1\ falls\ nicht\ vorhanden\r\n
numComments=20
